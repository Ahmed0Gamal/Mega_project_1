
Mega_Project_1_Nucleo.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000274  080001c4  080001c4  000101c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000438  08000440  00010440  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000438  08000438  00010440  2**0
                  CONTENTS
  4 .ARM          00000000  08000438  08000438  00010440  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000438  08000440  00010440  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000438  08000438  00010438  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800043c  0800043c  0001043c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010440  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000007c  20000000  08000440  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000007c  08000440  0002007c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010440  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010470  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000d13  00000000  00000000  000104b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000003c9  00000000  00000000  000111c6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000128  00000000  00000000  00011590  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000cc  00000000  00000000  000116b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002120  00000000  00000000  00011784  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00001522  00000000  00000000  000138a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00008a52  00000000  00000000  00014dc6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000003a0  00000000  00000000  0001d818  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005e  00000000  00000000  0001dbb8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c4 <__do_global_dtors_aux>:
 80001c4:	b510      	push	{r4, lr}
 80001c6:	4c05      	ldr	r4, [pc, #20]	; (80001dc <__do_global_dtors_aux+0x18>)
 80001c8:	7823      	ldrb	r3, [r4, #0]
 80001ca:	b933      	cbnz	r3, 80001da <__do_global_dtors_aux+0x16>
 80001cc:	4b04      	ldr	r3, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x1c>)
 80001ce:	b113      	cbz	r3, 80001d6 <__do_global_dtors_aux+0x12>
 80001d0:	4804      	ldr	r0, [pc, #16]	; (80001e4 <__do_global_dtors_aux+0x20>)
 80001d2:	f3af 8000 	nop.w
 80001d6:	2301      	movs	r3, #1
 80001d8:	7023      	strb	r3, [r4, #0]
 80001da:	bd10      	pop	{r4, pc}
 80001dc:	20000000 	.word	0x20000000
 80001e0:	00000000 	.word	0x00000000
 80001e4:	08000420 	.word	0x08000420

080001e8 <frame_dummy>:
 80001e8:	b508      	push	{r3, lr}
 80001ea:	4b03      	ldr	r3, [pc, #12]	; (80001f8 <frame_dummy+0x10>)
 80001ec:	b11b      	cbz	r3, 80001f6 <frame_dummy+0xe>
 80001ee:	4903      	ldr	r1, [pc, #12]	; (80001fc <frame_dummy+0x14>)
 80001f0:	4803      	ldr	r0, [pc, #12]	; (8000200 <frame_dummy+0x18>)
 80001f2:	f3af 8000 	nop.w
 80001f6:	bd08      	pop	{r3, pc}
 80001f8:	00000000 	.word	0x00000000
 80001fc:	20000004 	.word	0x20000004
 8000200:	08000420 	.word	0x08000420

08000204 <EXTI0_IRQHandler>:


IntCallBack_t Globalarr_EXTICallBack [22];

void EXTI0_IRQHandler()
{
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
	if (Globalarr_EXTICallBack[0] != NULL)
 8000208:	4b05      	ldr	r3, [pc, #20]	; (8000220 <EXTI0_IRQHandler+0x1c>)
 800020a:	681b      	ldr	r3, [r3, #0]
 800020c:	2b00      	cmp	r3, #0
 800020e:	d002      	beq.n	8000216 <EXTI0_IRQHandler+0x12>
	{
		Globalarr_EXTICallBack[0]();
 8000210:	4b03      	ldr	r3, [pc, #12]	; (8000220 <EXTI0_IRQHandler+0x1c>)
 8000212:	681b      	ldr	r3, [r3, #0]
 8000214:	4798      	blx	r3
	}
	EXTI_ClearPendingFlag(EXTI_INT0);
 8000216:	2000      	movs	r0, #0
 8000218:	f000 f832 	bl	8000280 <EXTI_ClearPendingFlag>
}
 800021c:	bf00      	nop
 800021e:	bd80      	pop	{r7, pc}
 8000220:	2000001c 	.word	0x2000001c

08000224 <EXTI1_IRQHandler>:
void EXTI1_IRQHandler()
{
 8000224:	b580      	push	{r7, lr}
 8000226:	af00      	add	r7, sp, #0
	if (Globalarr_EXTICallBack[0] != NULL)
 8000228:	4b05      	ldr	r3, [pc, #20]	; (8000240 <EXTI1_IRQHandler+0x1c>)
 800022a:	681b      	ldr	r3, [r3, #0]
 800022c:	2b00      	cmp	r3, #0
 800022e:	d002      	beq.n	8000236 <EXTI1_IRQHandler+0x12>
	{
		Globalarr_EXTICallBack[0]();
 8000230:	4b03      	ldr	r3, [pc, #12]	; (8000240 <EXTI1_IRQHandler+0x1c>)
 8000232:	681b      	ldr	r3, [r3, #0]
 8000234:	4798      	blx	r3
	}
	EXTI_ClearPendingFlag(EXTI_INT1);
 8000236:	2001      	movs	r0, #1
 8000238:	f000 f822 	bl	8000280 <EXTI_ClearPendingFlag>

}
 800023c:	bf00      	nop
 800023e:	bd80      	pop	{r7, pc}
 8000240:	2000001c 	.word	0x2000001c

08000244 <EXTI2_IRQHandler>:
void EXTI2_IRQHandler()
{
 8000244:	b580      	push	{r7, lr}
 8000246:	af00      	add	r7, sp, #0
	if (Globalarr_EXTICallBack[0] != NULL)
 8000248:	4b05      	ldr	r3, [pc, #20]	; (8000260 <EXTI2_IRQHandler+0x1c>)
 800024a:	681b      	ldr	r3, [r3, #0]
 800024c:	2b00      	cmp	r3, #0
 800024e:	d002      	beq.n	8000256 <EXTI2_IRQHandler+0x12>
	{
		Globalarr_EXTICallBack[0]();
 8000250:	4b03      	ldr	r3, [pc, #12]	; (8000260 <EXTI2_IRQHandler+0x1c>)
 8000252:	681b      	ldr	r3, [r3, #0]
 8000254:	4798      	blx	r3
	}
	EXTI_ClearPendingFlag(EXTI_INT2);
 8000256:	2002      	movs	r0, #2
 8000258:	f000 f812 	bl	8000280 <EXTI_ClearPendingFlag>

}
 800025c:	bf00      	nop
 800025e:	bd80      	pop	{r7, pc}
 8000260:	2000001c 	.word	0x2000001c

08000264 <EXTI3_IRQHandler>:
void EXTI3_IRQHandler()
{
 8000264:	b580      	push	{r7, lr}
 8000266:	af00      	add	r7, sp, #0
	if (Globalarr_EXTICallBack[0] != NULL)
 8000268:	4b04      	ldr	r3, [pc, #16]	; (800027c <EXTI3_IRQHandler+0x18>)
 800026a:	681b      	ldr	r3, [r3, #0]
 800026c:	2b00      	cmp	r3, #0
 800026e:	d002      	beq.n	8000276 <EXTI3_IRQHandler+0x12>
	{
		Globalarr_EXTICallBack[0]();
 8000270:	4b02      	ldr	r3, [pc, #8]	; (800027c <EXTI3_IRQHandler+0x18>)
 8000272:	681b      	ldr	r3, [r3, #0]
 8000274:	4798      	blx	r3
	}
}
 8000276:	bf00      	nop
 8000278:	bd80      	pop	{r7, pc}
 800027a:	bf00      	nop
 800027c:	2000001c 	.word	0x2000001c

08000280 <EXTI_ClearPendingFlag>:
	EXTI->EXTI_SWIER &= ~(0b1<<copy_eEXTI_Int);
	EXTI->EXTI_SWIER |=  (0b1<<copy_eEXTI_Int);

}
void EXTI_ClearPendingFlag(EXTI_Int_Type copy_eEXTI_Int)
{
 8000280:	b480      	push	{r7}
 8000282:	b083      	sub	sp, #12
 8000284:	af00      	add	r7, sp, #0
 8000286:	4603      	mov	r3, r0
 8000288:	71fb      	strb	r3, [r7, #7]
	EXTI->EXTI_PR &= ~(0b1<<copy_eEXTI_Int);
 800028a:	4b0d      	ldr	r3, [pc, #52]	; (80002c0 <EXTI_ClearPendingFlag+0x40>)
 800028c:	695b      	ldr	r3, [r3, #20]
 800028e:	79fa      	ldrb	r2, [r7, #7]
 8000290:	2101      	movs	r1, #1
 8000292:	fa01 f202 	lsl.w	r2, r1, r2
 8000296:	43d2      	mvns	r2, r2
 8000298:	4611      	mov	r1, r2
 800029a:	4a09      	ldr	r2, [pc, #36]	; (80002c0 <EXTI_ClearPendingFlag+0x40>)
 800029c:	400b      	ands	r3, r1
 800029e:	6153      	str	r3, [r2, #20]
	EXTI->EXTI_PR |=  (0b1<<copy_eEXTI_Int);
 80002a0:	4b07      	ldr	r3, [pc, #28]	; (80002c0 <EXTI_ClearPendingFlag+0x40>)
 80002a2:	695b      	ldr	r3, [r3, #20]
 80002a4:	79fa      	ldrb	r2, [r7, #7]
 80002a6:	2101      	movs	r1, #1
 80002a8:	fa01 f202 	lsl.w	r2, r1, r2
 80002ac:	4611      	mov	r1, r2
 80002ae:	4a04      	ldr	r2, [pc, #16]	; (80002c0 <EXTI_ClearPendingFlag+0x40>)
 80002b0:	430b      	orrs	r3, r1
 80002b2:	6153      	str	r3, [r2, #20]

}
 80002b4:	bf00      	nop
 80002b6:	370c      	adds	r7, #12
 80002b8:	46bd      	mov	sp, r7
 80002ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002be:	4770      	bx	lr
 80002c0:	40013c00 	.word	0x40013c00

080002c4 <SPI1_IRQHandler>:

	return LocalErrorStatue ;
}

void SPI1_IRQHandler()
{
 80002c4:	b580      	push	{r7, lr}
 80002c6:	b082      	sub	sp, #8
 80002c8:	af00      	add	r7, sp, #0
	struct IRQ_SRC_S IRQ_SRC;

	IRQ_SRC.TXE= ((SPI1->SR & (1<<1) )>>1);
 80002ca:	4b13      	ldr	r3, [pc, #76]	; (8000318 <SPI1_IRQHandler+0x54>)
 80002cc:	689b      	ldr	r3, [r3, #8]
 80002ce:	085b      	lsrs	r3, r3, #1
 80002d0:	f003 0301 	and.w	r3, r3, #1
 80002d4:	b2da      	uxtb	r2, r3
 80002d6:	793b      	ldrb	r3, [r7, #4]
 80002d8:	f362 0300 	bfi	r3, r2, #0, #1
 80002dc:	713b      	strb	r3, [r7, #4]
	IRQ_SRC.RXNE= ((SPI1->SR & (1<<0) )>>0);
 80002de:	4b0e      	ldr	r3, [pc, #56]	; (8000318 <SPI1_IRQHandler+0x54>)
 80002e0:	689b      	ldr	r3, [r3, #8]
 80002e2:	f003 0301 	and.w	r3, r3, #1
 80002e6:	b2da      	uxtb	r2, r3
 80002e8:	793b      	ldrb	r3, [r7, #4]
 80002ea:	f362 0341 	bfi	r3, r2, #1, #1
 80002ee:	713b      	strb	r3, [r7, #4]
	IRQ_SRC.ERRI= ((SPI1->SR & (1<<4) )>>4);
 80002f0:	4b09      	ldr	r3, [pc, #36]	; (8000318 <SPI1_IRQHandler+0x54>)
 80002f2:	689b      	ldr	r3, [r3, #8]
 80002f4:	091b      	lsrs	r3, r3, #4
 80002f6:	f003 0301 	and.w	r3, r3, #1
 80002fa:	b2da      	uxtb	r2, r3
 80002fc:	793b      	ldrb	r3, [r7, #4]
 80002fe:	f362 0382 	bfi	r3, r2, #2, #1
 8000302:	713b      	strb	r3, [r7, #4]

	Global_SPI_Config[0]->SPI_PtrCallBack(IRQ_SRC);
 8000304:	4b05      	ldr	r3, [pc, #20]	; (800031c <SPI1_IRQHandler+0x58>)
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	691b      	ldr	r3, [r3, #16]
 800030a:	7938      	ldrb	r0, [r7, #4]
 800030c:	4798      	blx	r3

}
 800030e:	bf00      	nop
 8000310:	3708      	adds	r7, #8
 8000312:	46bd      	mov	sp, r7
 8000314:	bd80      	pop	{r7, pc}
 8000316:	bf00      	nop
 8000318:	40013000 	.word	0x40013000
 800031c:	20000074 	.word	0x20000074

08000320 <SPI2_IRQHandler>:
void SPI2_IRQHandler()
{
 8000320:	b580      	push	{r7, lr}
 8000322:	b082      	sub	sp, #8
 8000324:	af00      	add	r7, sp, #0
	struct IRQ_SRC_S IRQ_SRC;

	IRQ_SRC.TXE= ((SPI2->SR & (1<<1) )>>1);
 8000326:	4b13      	ldr	r3, [pc, #76]	; (8000374 <SPI2_IRQHandler+0x54>)
 8000328:	689b      	ldr	r3, [r3, #8]
 800032a:	085b      	lsrs	r3, r3, #1
 800032c:	f003 0301 	and.w	r3, r3, #1
 8000330:	b2da      	uxtb	r2, r3
 8000332:	793b      	ldrb	r3, [r7, #4]
 8000334:	f362 0300 	bfi	r3, r2, #0, #1
 8000338:	713b      	strb	r3, [r7, #4]
	IRQ_SRC.RXNE= ((SPI2->SR & (1<<0) )>>0);
 800033a:	4b0e      	ldr	r3, [pc, #56]	; (8000374 <SPI2_IRQHandler+0x54>)
 800033c:	689b      	ldr	r3, [r3, #8]
 800033e:	f003 0301 	and.w	r3, r3, #1
 8000342:	b2da      	uxtb	r2, r3
 8000344:	793b      	ldrb	r3, [r7, #4]
 8000346:	f362 0341 	bfi	r3, r2, #1, #1
 800034a:	713b      	strb	r3, [r7, #4]
	IRQ_SRC.ERRI= ((SPI2->SR & (1<<4) )>>4);
 800034c:	4b09      	ldr	r3, [pc, #36]	; (8000374 <SPI2_IRQHandler+0x54>)
 800034e:	689b      	ldr	r3, [r3, #8]
 8000350:	091b      	lsrs	r3, r3, #4
 8000352:	f003 0301 	and.w	r3, r3, #1
 8000356:	b2da      	uxtb	r2, r3
 8000358:	793b      	ldrb	r3, [r7, #4]
 800035a:	f362 0382 	bfi	r3, r2, #2, #1
 800035e:	713b      	strb	r3, [r7, #4]


	Global_SPI_Config[1]->SPI_PtrCallBack(IRQ_SRC);
 8000360:	4b05      	ldr	r3, [pc, #20]	; (8000378 <SPI2_IRQHandler+0x58>)
 8000362:	685b      	ldr	r3, [r3, #4]
 8000364:	691b      	ldr	r3, [r3, #16]
 8000366:	7938      	ldrb	r0, [r7, #4]
 8000368:	4798      	blx	r3

}
 800036a:	bf00      	nop
 800036c:	3708      	adds	r7, #8
 800036e:	46bd      	mov	sp, r7
 8000370:	bd80      	pop	{r7, pc}
 8000372:	bf00      	nop
 8000374:	40003800 	.word	0x40003800
 8000378:	20000074 	.word	0x20000074

0800037c <main>:
#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
 800037c:	b480      	push	{r7}
 800037e:	af00      	add	r7, sp, #0
    /* Loop forever */
	for(;;);
 8000380:	e7fe      	b.n	8000380 <main+0x4>
	...

08000384 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000384:	480d      	ldr	r0, [pc, #52]	; (80003bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000386:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000388:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800038c:	480c      	ldr	r0, [pc, #48]	; (80003c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800038e:	490d      	ldr	r1, [pc, #52]	; (80003c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000390:	4a0d      	ldr	r2, [pc, #52]	; (80003c8 <LoopForever+0xe>)
  movs r3, #0
 8000392:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000394:	e002      	b.n	800039c <LoopCopyDataInit>

08000396 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000396:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000398:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800039a:	3304      	adds	r3, #4

0800039c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800039c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800039e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003a0:	d3f9      	bcc.n	8000396 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003a2:	4a0a      	ldr	r2, [pc, #40]	; (80003cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80003a4:	4c0a      	ldr	r4, [pc, #40]	; (80003d0 <LoopForever+0x16>)
  movs r3, #0
 80003a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003a8:	e001      	b.n	80003ae <LoopFillZerobss>

080003aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003ac:	3204      	adds	r2, #4

080003ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003b0:	d3fb      	bcc.n	80003aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003b2:	f000 f811 	bl	80003d8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003b6:	f7ff ffe1 	bl	800037c <main>

080003ba <LoopForever>:

LoopForever:
  b LoopForever
 80003ba:	e7fe      	b.n	80003ba <LoopForever>
  ldr   r0, =_estack
 80003bc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80003c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003c4:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80003c8:	08000440 	.word	0x08000440
  ldr r2, =_sbss
 80003cc:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003d0:	2000007c 	.word	0x2000007c

080003d4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003d4:	e7fe      	b.n	80003d4 <ADC_IRQHandler>
	...

080003d8 <__libc_init_array>:
 80003d8:	b570      	push	{r4, r5, r6, lr}
 80003da:	4d0d      	ldr	r5, [pc, #52]	; (8000410 <__libc_init_array+0x38>)
 80003dc:	4c0d      	ldr	r4, [pc, #52]	; (8000414 <__libc_init_array+0x3c>)
 80003de:	1b64      	subs	r4, r4, r5
 80003e0:	10a4      	asrs	r4, r4, #2
 80003e2:	2600      	movs	r6, #0
 80003e4:	42a6      	cmp	r6, r4
 80003e6:	d109      	bne.n	80003fc <__libc_init_array+0x24>
 80003e8:	4d0b      	ldr	r5, [pc, #44]	; (8000418 <__libc_init_array+0x40>)
 80003ea:	4c0c      	ldr	r4, [pc, #48]	; (800041c <__libc_init_array+0x44>)
 80003ec:	f000 f818 	bl	8000420 <_init>
 80003f0:	1b64      	subs	r4, r4, r5
 80003f2:	10a4      	asrs	r4, r4, #2
 80003f4:	2600      	movs	r6, #0
 80003f6:	42a6      	cmp	r6, r4
 80003f8:	d105      	bne.n	8000406 <__libc_init_array+0x2e>
 80003fa:	bd70      	pop	{r4, r5, r6, pc}
 80003fc:	f855 3b04 	ldr.w	r3, [r5], #4
 8000400:	4798      	blx	r3
 8000402:	3601      	adds	r6, #1
 8000404:	e7ee      	b.n	80003e4 <__libc_init_array+0xc>
 8000406:	f855 3b04 	ldr.w	r3, [r5], #4
 800040a:	4798      	blx	r3
 800040c:	3601      	adds	r6, #1
 800040e:	e7f2      	b.n	80003f6 <__libc_init_array+0x1e>
 8000410:	08000438 	.word	0x08000438
 8000414:	08000438 	.word	0x08000438
 8000418:	08000438 	.word	0x08000438
 800041c:	0800043c 	.word	0x0800043c

08000420 <_init>:
 8000420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000422:	bf00      	nop
 8000424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000426:	bc08      	pop	{r3}
 8000428:	469e      	mov	lr, r3
 800042a:	4770      	bx	lr

0800042c <_fini>:
 800042c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800042e:	bf00      	nop
 8000430:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000432:	bc08      	pop	{r3}
 8000434:	469e      	mov	lr, r3
 8000436:	4770      	bx	lr
